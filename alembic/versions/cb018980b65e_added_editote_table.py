"""Added editote table

Revision ID: cb018980b65e
Revises: 
Create Date: 2022-11-21 15:18:36.052899

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cb018980b65e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('idTag', sa.Integer(), nullable=False),
    sa.Column('text', sa.VARCHAR(length=45), nullable=False),
    sa.PrimaryKeyConstraint('idTag')
    )
    op.create_table('user',
    sa.Column('idUser', sa.Integer(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=25), nullable=False),
    sa.Column('password', sa.VARCHAR(length=45), nullable=False),
    sa.Column('email', sa.VARCHAR(length=35), nullable=False),
    sa.Column('firstName', sa.VARCHAR(length=25), nullable=False),
    sa.Column('lastName', sa.VARCHAR(length=25), nullable=False),
    sa.Column('userStatus', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('idUser')
    )
    op.create_table('note',
    sa.Column('idNote', sa.Integer(), nullable=False),
    sa.Column('ownerId', sa.Integer(), nullable=True),
    sa.Column('title', sa.VARCHAR(length=45), nullable=False),
    sa.Column('isPublic', sa.VARCHAR(length=5), nullable=False),
    sa.Column('text', sa.VARCHAR(length=404), nullable=False),
    sa.Column('dateOfEditing', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ownerId'], ['user.idUser'], ),
    sa.PrimaryKeyConstraint('idNote')
    )
    op.create_table('stats',
    sa.Column('idStats', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('numOfNotes', sa.Integer(), nullable=False),
    sa.Column('numOfEditingNotes', sa.Integer(), nullable=False),
    sa.Column('dateOfCreating', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['user.idUser'], ),
    sa.PrimaryKeyConstraint('idStats')
    )
    op.create_table('editNote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idUser', sa.Integer(), nullable=True),
    sa.Column('idNote', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idNote'], ['note.idNote'], ),
    sa.ForeignKeyConstraint(['idUser'], ['user.idUser'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idNote', sa.Integer(), nullable=True),
    sa.Column('idTag', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idNote'], ['note.idNote'], ),
    sa.ForeignKeyConstraint(['idTag'], ['tag.idTag'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tags')
    op.drop_table('editNote')
    op.drop_table('stats')
    op.drop_table('note')
    op.drop_table('user')
    op.drop_table('tag')
    # ### end Alembic commands ###
